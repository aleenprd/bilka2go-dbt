WITH 
SOURCE AS (
  SELECT *
  FROM {{ ref('stg_snapshot__groceries') }}
)
,STAGING AS (
  SELECT
    description,
    PRODUCT_ID,
    CATEGORY_DK,
    CATEGORY_EN,
    TITLE,
    CAST(
      REPLACE(
        REPLACE(
          REPLACE(PRICE, '.', ''),
          ',-', ''),
        ',', '.')
    AS FLOAT64) AS PRICE,
    CONCAT('https://www.bilkatogo.dk', PRODUCT_URL) AS PRODUCT_URL,
    IMAGE_URL,
    CASE  
      WHEN REGEXP_CONTAINS(LOWER(PRODUCER), r'\s+g$')  THEN NULL
      WHEN REGEXP_CONTAINS(LOWER(PRODUCER), r'\s+stk$') THEN NULL
      WHEN REGEXP_CONTAINS(LOWER(PRODUCER), r'\s+l$') THEN NULL
      WHEN REGEXP_CONTAINS(LOWER(PRODUCER), r'\s+kg$') THEN NULL
      WHEN REGEXP_CONTAINS(LOWER(PRODUCER), r'\s+ml$') THEN NULL
      ELSE PRODUCER 
    END AS PRODUCER,
    CASE 
      WHEN ARRAY_LENGTH(SPLIT(PRICE_PER_UNIT, '/')) = 1 
      AND LOWER(PRICE_PER_UNIT) LIKE 'ex. pant'
        THEN REPLACE(LOWER(SPLIT(QUANTITY, '/')[OFFSET(1)]), '.', '')
      ELSE
        REPLACE(LOWER(SPLIT(PRICE_PER_UNIT, '/')[OFFSET(1)]), '.', '') 
    END AS MEASURE_UNIT,
    QUANTITY AS QUANTITY_RAW,
    CASE 
      WHEN SAFE_CAST(SPLIT(QUANTITY, ' ')[OFFSET(0)] AS INT64) IS NOT NULL 
        THEN SAFE_CAST(SPLIT(QUANTITY, ' ')[OFFSET(0)] AS INT64)
      ELSE CAST(SAFE_CAST(SPLIT(QUANTITY, ' ')[OFFSET(0)] AS FLOAT64) * 1000 AS INT64)
    END AS QUANTITY,
    CASE 
      WHEN STRPOS(SUBSTR(PRICE_PER_UNIT, 1, LENGTH(PRICE_PER_UNIT) - 1), ',') > 0 
        AND STRPOS(SUBSTR(PRICE_PER_UNIT, 1, LENGTH(PRICE_PER_UNIT) - 1), '.') > 0 
          THEN 'bad' 
      ELSE 'good' 
    END AS PRICE_PER_UNIT_FORMAT,
    PRICE_PER_UNIT AS PRICE_PER_UNIT_RAW,
    LABEL1,
    LABEL2,
    LABEL3,
    DBT_SCD_ID,
    DBT_UPDATED_AT,
    DBT_VALID_FROM,
    DBT_VALID_TO
    FROM SOURCE
    
)
,INTERMEDIATE AS (
  SELECT
    description,
    PRODUCT_ID,
    CATEGORY_DK,
    CATEGORY_EN,
    TITLE,
    PRODUCT_URL,
    IMAGE_URL,
    PRODUCER AS BRAND,
    LABEL1,
    LABEL2,
    LABEL3,
    PRICE,
    CASE 
      WHEN MEASURE_UNIT = 'stk' THEN 'stk'
      WHEN MEASURE_UNIT = 'kg' THEN 'kg'
      WHEN MEASURE_UNIT = 'g' THEN 'kg'
      WHEN MEASURE_UNIT = 'l' THEN 'l'
      WHEN MEASURE_UNIT = 'ml' THEN 'l'
      WHEN MEASURE_UNIT = 'm' THEN 'm'
      WHEN MEASURE_UNIT = 'meter' THEN 'm'
      WHEN MEASURE_UNIT = 'centimeter' THEN 'm'
      WHEN MEASURE_UNIT = 'cm' then 'm'
      ELSE NULL
    END AS MEASURE_UNIT,
    QUANTITY_RAW,
    QUANTITY,
    PRICE_PER_UNIT_RAW,
    PRICE_PER_UNIT_FORMAT,
    CASE 
      WHEN SAFE_CAST(REPLACE(REPLACE(SPLIT(PRICE_PER_UNIT_RAW, '/')[OFFSET(0)], '.', ''), ',', '.') AS FLOAT64) IS NULL 
        THEN CAST(REPLACE(REPLACE(SPLIT(QUANTITY_RAW, '/')[OFFSET(0)], '.', ''), ',', '.') AS FLOAT64)
      ELSE CAST(REPLACE(REPLACE(SPLIT(PRICE_PER_UNIT_RAW, '/')[OFFSET(0)], '.', ''), ',', '.') AS FLOAT64)
    END AS PRICE_PER_UNIT,
    DBT_SCD_ID,
    DBT_UPDATED_AT,
    DBT_VALID_FROM,
    DBT_VALID_TO
  FROM STAGING
),
FINAL AS (
    SELECT 
        PRODUCT_ID,
        CATEGORY_DK,
        CATEGORY_EN,
        TITLE,
        PRODUCT_URL,
        IMAGE_URL,
        BRAND,
        LABEL1,
        LABEL2,
        LABEL3,
        PRICE,
        MEASURE_UNIT,
        description,
        QUANTITY_RAW,
        CASE 
            WHEN QUANTITY IS NOT NULL THEN QUANTITY
            ELSE CAST(REGEXP_EXTRACT(DESCRIPTION, r'\d+')  AS INT64)
        END AS QUANTITY,
        PRICE_PER_UNIT_RAW,
        CASE WHEN PRICE_PER_UNIT_FORMAT = 'good' then PRICE_PER_UNIT
        ELSE CAST(REPLACE(SPLIT(PRICE_PER_UNIT_RAW, '/')[OFFSET(0)], ',', '') AS FLOAT64)
        END AS PRICE_PER_UNIT,
        DBT_SCD_ID,
        DBT_UPDATED_AT,
        DBT_VALID_FROM,
        DBT_VALID_TO
    FROM INTERMEDIATE
)
SELECT 
    PRODUCT_ID,
    CATEGORY_DK,
    CATEGORY_EN,
    TITLE,
    PRODUCT_URL,
    IMAGE_URL,
    BRAND,
    LABEL1,
    LABEL2,
    LABEL3,
    CASE  
      WHEN PRICE IS NULL THEN PRICE_PER_UNIT * QUANTITY 
      ELSE PRICE 
    END AS PRICE,
    MEASURE_UNIT,
    CASE 
        WHEN ARRAY_LENGTH(SPLIT(QUANTITY_RAW, ' ')) = 2 AND LOWER(SPLIT(QUANTITY_RAW, ' ')[OFFSET(1)]) = 'g' 
          THEN QUANTITY / 1000
        WHEN ARRAY_LENGTH(SPLIT(QUANTITY_RAW, ' ')) = 2 AND LOWER(SPLIT(QUANTITY_RAW, ' ')[OFFSET(1)]) = 'ml' 
          THEN QUANTITY / 1000
        WHEN ARRAY_LENGTH(SPLIT(QUANTITY_RAW, ' ')) = 2 AND LOWER(SPLIT(QUANTITY_RAW, ' ')[OFFSET(1)]) = 'stk' 
          THEN QUANTITY
        WHEN ARRAY_LENGTH(SPLIT(QUANTITY_RAW, ' ')) = 1 AND LOWER(SPLIT(QUANTITY_RAW, '/')[OFFSET(1)]) = 'g' 
          THEN QUANTITY / 1000
        WHEN ARRAY_LENGTH(SPLIT(QUANTITY_RAW, ' ')) = 1 AND LOWER(SPLIT(QUANTITY_RAW, '/')[OFFSET(1)]) = 'ml' 
          THEN QUANTITY / 1000
        WHEN ARRAY_LENGTH(SPLIT(QUANTITY_RAW, ' ')) = 1 AND LOWER(SPLIT(QUANTITY_RAW, '/')[OFFSET(1)]) = 'stk' 
          THEN QUANTITY
        ELSE QUANTITY
    END AS QUANTITY,
    PRICE_PER_UNIT,
    DBT_SCD_ID,
    DBT_UPDATED_AT,
    DBT_VALID_FROM,
    DBT_VALID_TO
FROM FINAL 